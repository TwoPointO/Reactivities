{"version":3,"sources":["app/models/pagination.ts","app/api/agent.ts","app/models/activity.ts","app/models/profile.ts","app/stores/activityStore.ts","app/stores/profileStore.ts","app/stores/userStore.ts","app/stores/store.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/commentStore.ts","app/layout/navbar.tsx","features/activities/dashboard/ActivityFilters.tsx","features/profiles/FollowButton.tsx","features/profiles/ProfileCard.tsx","features/activities/dashboard/ActivityListItemAttendee.tsx","features/activities/dashboard/ActivityListItem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityListItemPlaceholder.tsx","features/activities/dashboard/ActivityDashboard.tsx","app/common/form/MyTextInput.tsx","features/users/LoginForm.tsx","features/errors/ValidationErrors.tsx","features/users/RegisterForm.tsx","features/home/HomePage.tsx","app/layout/LoadingComponent.tsx","app/common/form/MyTextArea.tsx","app/common/form/MySelectInput.tsx","app/common/options/CategoryOptions.ts","app/common/form/MyDateInput.tsx","features/activities/form/ActivityForm.tsx","features/activities/details/ActivityDetailedChat.tsx","features/activities/details/ActivityDetailedHeader.tsx","features/activities/details/ActivityDetailedInfo.tsx","features/activities/details/ActivityDetailedSidebar.tsx","features/activities/details/ActivityDetails.tsx","features/errors/TestError.tsx","features/errors/NotFound.tsx","features/errors/ServerError.tsx","app/common/modal/ModalContainer.tsx","features/profiles/ProfileEditForm.tsx","features/profiles/ProfileAbout.tsx","features/profiles/ProfileActivities.tsx","features/profiles/ProfileFollowings.tsx","app/common/imageUpload/PhotoWidgetCropper.tsx","app/common/imageUpload/PhotoWidgetDropzone.tsx","app/common/imageUpload/PhotoUploadWidget.tsx","features/profiles/ProfilePhotos.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfileHeader.tsx","features/profiles/ProfilePage.tsx","app/layout/PrivateRoute.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["PaginatedResult","data","pagination","this","PagingParams","pageNumber","pageSize","sleep","delay","Promise","resolve","setTimeout","axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","response","a","JSON","parse","error","status","toast","method","errors","hasOwnProperty","history","push","modalStateErrors","key","flat","setServerError","reject","responseBody","requests","url","get","then","body","post","put","delete","agent","Activities","list","params","details","id","create","activity","update","attend","Account","current","login","user","register","Profiles","username","uploadPhoto","file","formData","FormData","append","setMainPhoto","deletePhoto","updateProfile","profile","updateFollowing","listFollowings","predicate","listActivities","Activity","init","Object","assign","ActivityFormValues","undefined","title","category","description","date","city","venue","Profile","displayName","image","ActivityStore","activityRegistry","Map","selectedActivity","editMode","loading","loadingInitial","pagingParams","set","setPagingParams","setPredicate","value","resetPredicate","forEach","loadActivities","axiosParams","result","setActivity","setPagination","setLoadingInitial","console","log","loadActivity","getActivity","runInAction","userStore","isGoing","attendees","some","isHost","hostUsername","host","find","x","Date","state","createActivity","attendee","newActivity","updateActivity","updatedActivity","deleteActivity","updateAttendance","filter","cancelActivityToggle","isCancelled","clearSelectedActivity","updateAttendeeFollowing","following","followersCount","makeAutoObservable","reaction","keys","clear","URLSearchParams","toString","toISOString","Array","from","values","sort","b","getTime","entries","activitiesByDate","reduce","activities","format","ProfileStore","loadingProfile","uploading","followings","loadingFollowings","activeTab","userActivities","loadingActivities","loadUserActivities","setActiveTab","loadProfile","photo","photos","isMain","setImage","p","setDisplayName","activityStore","followingCount","loadFollowings","UserStore","creds","setToken","modalStore","closeModal","logout","window","localStorage","removeItem","getUser","name","getItem","appLoaded","setAppLoaded","setItem","modal","open","openModal","content","profileStore","commentStore","comments","hubConnection","createHubConnection","activityId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","catch","on","comment","createdAt","unshift","stopHubConnection","stop","clearComments","addComment","invoke","StoreContext","createContext","useStore","useContext","observer","Menu","inverted","fixed","Container","Item","as","NavLink","to","exact","header","src","alt","style","marginRight","Button","positive","position","Image","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","vertical","size","width","marginTop","Header","attached","color","active","has","onChange","Reveal","animated","Content","visible","fluid","hidden","basic","e","preventDefault","handleFollow","Card","Description","str","length","substring","truncate","bio","extra","Icon","styles","borderColor","borderWidth","List","horizontal","map","Popup","hoverable","trigger","circular","bordered","ActivityListItem","Segment","Group","Label","textAlign","marginBottom","secondary","clearing","floated","groupedActivities","group","sub","ActivityListItemPlaceholder","Placeholder","minHeight","Line","Paragraph","disabled","useState","loadingNext","setLoadingNext","useEffect","Grid","Column","pageStart","loadMore","currentPage","hasMore","totalPages","initialLoad","Loader","MyTextInput","props","useField","field","meta","Form","Field","touched","label","initialValues","email","password","onSubmit","setErrors","handleSubmit","isSubmitting","className","autoComplete","placeholder","type","render","ValidationErrors","Message","err","i","validationSchema","Yup","required","isValid","dirty","isLoggedIn","LoadingComponent","Dimmer","MyTextArea","MySelectInput","helpers","Select","clearable","options","d","setValue","onBlur","setTouched","categoryOptions","MyDateInput","selected","useHistory","useParams","nullable","enableReinitialize","uuid","handleFormSubmit","rows","placeholderText","showTimeSelect","timeCaption","dateFormat","border","resetForm","onKeyPress","shiftKey","Comment","Avatar","Author","Metadata","formatDistanceToNow","Text","whiteSpace","activityImageStyle","activityImageTextStyle","bottom","left","height","padding","zIndex","top","ribbon","verticalAlign","relaxed","divided","Extra","TestErrors","widths","baseUrl","primary","NotFound","Inline","message","Modal","onClose","setEditMode","isCurrentUser","Tab","Pane","panes","menuItem","pane","menu","onTabChange","activeIndex","handleTabChange","itemsPerRow","objectFit","Meta","PhotoWidgetCropper","imagePreview","setCropper","initialAspectRatio","aspectRatio","preview","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotoWidgetDropzone","setFiles","dzStyles","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoUploadWidget","files","revokeObjectURL","overflow","getCroppedCanvas","toBlob","blob","addPhotoMode","setAddPhotoMode","target","setTarget","currentTarget","handleSetMainPhoto","handleDeletePhoto","menuPosition","Statistic","Divider","PrivateRoute","Component","component","rest","location","useLocation","finally","hideProgressBar","path","HomePage","ActivityDashboard","ActivityDetails","ActivityForm","ProfilePage","ServerError","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","scrollTo","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.891f5c13.chunk.js","sourcesContent":["export interface Pagination {\r\n    currentPage: number;\r\n    itemsPerPage: number;\r\n    totalItems: number;\r\n    totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T> {\r\n    data: T;\r\n    pagination: Pagination;\r\n\r\n    constructor(data: T, pagination: Pagination) {\r\n        this.data = data;\r\n        this.pagination = pagination;\r\n    }\r\n}\r\n\r\nexport class PagingParams {\r\n    pageNumber;\r\n    pageSize;\r\n\r\n    constructor(pageNumber = 1, pageSize = 2) {\r\n        this.pageNumber = pageNumber;\r\n        this.pageSize = pageSize;\r\n    }\r\n}","import axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { history } from \"../..\";\r\nimport { Activity, ActivityFormValues } from \"../models/activity\";\r\nimport { PaginatedResult } from \"../models/pagination\";\r\nimport { Photo, Profile, UserActivity } from \"../models/profile\";\r\nimport { User, UserFormValues } from \"../models/user\";\r\nimport { store } from \"../stores/store\";\r\n\r\nconst sleep = (delay: number) => {\r\n  return new Promise((resolve) => {\r\n    setTimeout(resolve, delay);\r\n  });\r\n};\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.request.use((config) => {\r\n  const token = store.commonStore.token;\r\n  if (token) config.headers.Authorization = `Bearer ${token}`;\r\n  return config;\r\n});\r\n\r\naxios.interceptors.response.use(\r\n  async (response) => {\r\n    await sleep(1000);\r\n    const pagination = response.headers['pagination'];\r\n    if(pagination) {\r\n      response.data = new PaginatedResult(response.data, JSON.parse(pagination));\r\n      return response as AxiosResponse<PaginatedResult<any>>;\r\n    }\r\n    return response;\r\n  },\r\n  (error: AxiosError) => {\r\n    const { data, status, config } = error.response!;\r\n    switch (status) {\r\n      case 400:\r\n        if (typeof data === \"string\") {\r\n          toast.error(data);\r\n        }\r\n        if (config.method === \"get\" && data.errors.hasOwnProperty(\"id\")) {\r\n          history.push(\"/no-found\");\r\n        }\r\n        if (data.errors) {\r\n          const modalStateErrors = [];\r\n          for (const key in data.errors) {\r\n            if (data.errors[key]) {\r\n              modalStateErrors.push(data.errors[key]);\r\n            }\r\n          }\r\n          throw modalStateErrors.flat();\r\n        }\r\n        break;\r\n      case 401:\r\n        toast.error(\"Unauthorized!\");\r\n        break;\r\n      case 404:\r\n        history.push(\"/not-found\");\r\n        break;\r\n      case 500:\r\n        store.commonStore.setServerError(data);\r\n        history.push(\"/server-error\");\r\n        break;\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\r\n\r\nconst requests = {\r\n  get: <T>(url: string) => axios.get<T>(url).then(responseBody),\r\n  post: <T>(url: string, body: {}) =>\r\n    axios.post<T>(url, body).then(responseBody),\r\n  put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\r\n  del: <T>(url: string) => axios.delete<T>(url).then(responseBody),\r\n};\r\n\r\nconst Activities = {\r\n  list: (params: URLSearchParams) => axios.get<PaginatedResult<Activity[]>>(\"/activities\", {params})\r\n    .then(responseBody),\r\n  details: (id: string) => requests.get<Activity>(`/activities/${id}`),\r\n  create: (activity: ActivityFormValues) =>\r\n    requests.post(\"/activities\", activity),\r\n  update: (activity: ActivityFormValues) =>\r\n    requests.put(`/activities/${activity.id}`, activity),\r\n  delete: (id: string) => requests.del(`/activities/${id}`),\r\n  attend: (id: string) => requests.post(`/activities/${id}/attend`, {}),\r\n};\r\n\r\nconst Account = {\r\n  current: () => requests.get<User>(\"/account\"),\r\n  login: (user: UserFormValues) => requests.post<User>(\"/account/login\", user),\r\n  register: (user: UserFormValues) =>\r\n    requests.post<User>(\"/account/register\", user),\r\n};\r\n\r\nconst Profiles = {\r\n  get: (username: string) => requests.get<Profile>(`/profiles/${username}`),\r\n  uploadPhoto: (file: Blob) => {\r\n    let formData = new FormData();\r\n    formData.append(\"File\", file);\r\n    return axios.post<Photo>(\"photos\", formData, {\r\n      headers: { \"Content-type\": \"multipart/form-data\" },\r\n    });\r\n  },\r\n  setMainPhoto: (id: string) => requests.post(`/photos/${id}/setMain`, {}),\r\n  deletePhoto: (id: string) => requests.del(`/photos/${id}`),\r\n  updateProfile: (profile: Partial<Profile>) =>\r\n    requests.put(`/profiles`, profile),\r\n  updateFollowing: (username: string) => requests.post(`follow/${username}`, {}),\r\n  listFollowings: (username: string, predicate: string) => \r\n    requests.get<Profile[]>(`/follow/${username}?predicate=${predicate}`),\r\n  listActivities: (username: string, predicate: string) =>\r\n    requests.get<UserActivity[]>(`/profiles/${username}/activities?predicate=${predicate}`)\r\n};\r\n\r\nconst agent = {\r\n  Activities,\r\n  Account,\r\n  Profiles,\r\n};\r\n\r\nexport default agent;\r\n","import { Profile } from \"./profile\";\r\n\r\nexport interface Activity {\r\n    id: string;\r\n    title: string;\r\n    date: Date | null;\r\n    description: string;\r\n    category: string;\r\n    city: string;\r\n    venue: string;\r\n    hostUsername: string;\r\n    isCancelled: boolean;\r\n    isGoing: boolean;\r\n    isHost: boolean;\r\n    host?: Profile;\r\n    attendees?: Profile[];\r\n}\r\n\r\nexport class Activity implements Activity {\r\n    constructor(init?: ActivityFormValues) {\r\n        Object.assign(this, init);\r\n    }\r\n}\r\n\r\nexport class ActivityFormValues {\r\n    id?: string = undefined;\r\n    title: string = '';\r\n    category: string = '';\r\n    description: string = '';\r\n    date: Date | null = null;\r\n    city: string = '';\r\n    venue: string = '';\r\n\r\n    constructor(activity?: ActivityFormValues) {\r\n        if(activity) {\r\n            this.id = activity.id;\r\n            this.title = activity.title;\r\n            this.category = activity.category;\r\n            this.description = activity.description;\r\n            this.date = activity.date;\r\n            this.venue = activity.venue;\r\n            this.city = activity.city;\r\n        }\r\n    }\r\n}","import { User } from \"./user\";\r\n\r\nexport interface Profile {\r\n    username: string;\r\n    displayName: string;\r\n    image?: string;\r\n    bio?: string;\r\n    followersCount: number;\r\n    followingCount: number;\r\n    following: boolean;\r\n    photos?: Photo[];\r\n}\r\n\r\nexport class Profile implements Profile {\r\n    constructor(user: User) {\r\n        this.username = user.username;\r\n        this.displayName = user.displayName;\r\n        this.image = user.image;\r\n    }\r\n}\r\n\r\nexport interface Photo {\r\n    id: string;\r\n    url: string;\r\n    isMain: boolean;\r\n}\r\n\r\nexport interface UserActivity {\r\n    id: string;\r\n    title: string;\r\n    category: string;\r\n    date: Date;\r\n   }","import { format } from \"date-fns\";\r\nimport { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { Activity, ActivityFormValues } from \"../models/activity\";\r\nimport { Pagination, PagingParams } from \"../models/pagination\";\r\nimport { Profile } from \"../models/profile\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class ActivityStore {\r\n  activityRegistry = new Map<string, Activity>();\r\n  selectedActivity: Activity | undefined = undefined;\r\n  editMode = false;\r\n  loading = false;\r\n  loadingInitial = false;\r\n  pagination: Pagination | null = null;\r\n  pagingParams = new PagingParams(1, 2);\r\n  predicate = new Map().set('all', true);\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    reaction(\r\n      () => this.predicate.keys(),\r\n      () => {\r\n        this.pagingParams = new PagingParams();\r\n        this.activityRegistry.clear();\r\n        this.loadActivities();\r\n      }\r\n    )\r\n  }\r\n\r\n  setPagingParams = (pagingParams: PagingParams) => {\r\n    this.pagingParams = pagingParams;\r\n  }\r\n\r\n  setPredicate = (predicate: string, value: string | Date) => {\r\n    const resetPredicate = () => {\r\n      this.predicate.forEach((value, key) => {\r\n        if(key!=='startDate') {\r\n          this.predicate.delete(key);\r\n        }\r\n      })\r\n    }\r\n    switch(predicate) {\r\n      case 'all':\r\n        resetPredicate();\r\n        this.predicate.set('all', true);\r\n        break;\r\n      case 'isGoing':\r\n        resetPredicate();\r\n        this.predicate.set('isGoing', true);\r\n        break;\r\n      case 'isHost':\r\n        resetPredicate();\r\n        this.predicate.set('isHost', true);\r\n        break;\r\n      case 'startDate':\r\n        this.predicate.delete('startDate');\r\n        this.predicate.set('startDate', value);\r\n        break;\r\n    }\r\n  }\r\n\r\n  get axiosParams() {\r\n    const params = new URLSearchParams();\r\n    params.append('pageNumber', this.pagingParams.pageNumber.toString());\r\n    params.append('pageSize', this.pagingParams.pageSize.toString());\r\n    this.predicate.forEach((value, key) => {\r\n      if(key === 'startDate') {\r\n        params.append(key, (value as Date).toISOString());\r\n      } else {\r\n        params.append(key, value);\r\n      }\r\n    })\r\n    return params;\r\n  }\r\n\r\n  get activitiesByDate() {\r\n    return Array.from(this.activityRegistry.values()).sort(\r\n      (a, b) => a.date!.getTime() - b.date!.getTime());\r\n  }\r\n\r\n  get groupedActivities() {\r\n    return Object.entries(\r\n      this.activitiesByDate.reduce((activities, activity) => {\r\n        const date = format(activity.date!, 'dd MMM yyyy');\r\n        activities[date] = activities[date] ? [...activities[date], activity] : [activity];\r\n        return activities;\r\n      }, {} as {[key: string]: Activity[]})\r\n    )\r\n  }\r\n\r\n  loadActivities = async () => {\r\n    this.loadingInitial = true;\r\n    try {\r\n      const result = await agent.Activities.list(this.axiosParams);\r\n      result.data.forEach((activity) => {\r\n          this.setActivity(activity);\r\n      });\r\n      this.setPagination(result.pagination);\r\n      this.setLoadingInitial(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      this.setLoadingInitial(false);\r\n    }\r\n  };\r\n\r\n  setPagination = (pagination: Pagination) => {\r\n    this.pagination = pagination;\r\n  }\r\n\r\n  loadActivity = async (id: string) => {\r\n    let activity = this.getActivity(id);\r\n    if (activity) {\r\n      this.selectedActivity = activity;\r\n      return activity;\r\n    } else {\r\n      this.loading = true;\r\n      try {\r\n        activity = await agent.Activities.details(id);\r\n        this.setActivity(activity);\r\n        runInAction(() => {\r\n          this.selectedActivity = activity;\r\n        })\r\n        this.setLoadingInitial(false);\r\n        return activity;\r\n      } catch (error) {\r\n        console.log(error);\r\n        this.setLoadingInitial(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  private setActivity = (activity: Activity) => {\r\n    const user = store.userStore.user;\r\n    if(user) {\r\n      activity.isGoing = activity.attendees!.some(a => a.username === user.username);\r\n      activity.isHost = activity.hostUsername === user.username;\r\n      activity.host = activity.attendees?.find(x => x.username === activity.hostUsername);\r\n    }\r\n    activity.date = new Date(activity.date!);\r\n    //mutating state in mobX, populating observable activities\r\n    this.activityRegistry.set(activity.id, activity);\r\n  };\r\n\r\n  private getActivity = (id: string) => {\r\n    return this.activityRegistry.get(id);\r\n  };\r\n\r\n  setLoadingInitial = (state: boolean) => {\r\n    this.loadingInitial = state;\r\n    this.loading = state;\r\n  };\r\n\r\n  createActivity = async (activity: ActivityFormValues) => {\r\n    const user = store.userStore.user;\r\n    const attendee = new Profile(user!);\r\n    try {\r\n      await agent.Activities.create(activity);\r\n      const newActivity = new Activity(activity);\r\n      newActivity.hostUsername = user!.username;\r\n      newActivity.attendees = [attendee];\r\n      this.setActivity(newActivity);\r\n      runInAction(() => {\r\n        this.selectedActivity = newActivity;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  updateActivity = async (activity: ActivityFormValues) => {\r\n    try {\r\n      await agent.Activities.update(activity);\r\n      runInAction(() => {\r\n        if(activity.id) {\r\n          let updatedActivity = {...this.getActivity(activity.id), ...activity};\r\n          this.activityRegistry.set(activity.id, updatedActivity as Activity);\r\n          this.selectedActivity = updatedActivity as Activity;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  deleteActivity = async (id: string) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Activities.delete(id);\r\n      runInAction(() => {\r\n        this.activityRegistry.delete(id);\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  updateAttendance = async () => {\r\n    const user = store.userStore.user;\r\n    this.loading = true;\r\n    try {\r\n      await agent.Activities.attend(this.selectedActivity!.id);\r\n      runInAction(() => {\r\n        if(this.selectedActivity?.isGoing) {\r\n          this.selectedActivity.attendees = \r\n            this.selectedActivity.attendees?.filter(a => a.username !== user?.username);\r\n          this.selectedActivity.isGoing = false;\r\n        } else {\r\n          const attendee = new Profile(user!);\r\n          this.selectedActivity?.attendees?.push(attendee);\r\n          this.selectedActivity!.isGoing = true;\r\n        }\r\n        this.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!);\r\n      })\r\n    } catch(error) {\r\n      console.log(error);\r\n    } finally {\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      })\r\n    }\r\n  }\r\n\r\n  cancelActivityToggle = async () => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Activities.attend(this.selectedActivity!.id);\r\n      runInAction(() => {\r\n        this.selectedActivity!.isCancelled = !this.selectedActivity?.isCancelled;\r\n        this.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!);\r\n      })\r\n    } catch(error) {\r\n      console.log(error);\r\n    } finally {\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      })\r\n    }\r\n  }\r\n\r\n  clearSelectedActivity = () => {\r\n    this.selectedActivity = undefined;\r\n  }\r\n\r\n  updateAttendeeFollowing = (username: string) => {\r\n    this.activityRegistry.forEach(activity => {\r\n      activity.attendees?.forEach(attendee => {\r\n        if(attendee.username === username) {\r\n          attendee.following ? attendee.followersCount-- : attendee.followersCount++;\r\n          attendee.following = !attendee.following;\r\n        }\r\n      })\r\n    })\r\n  }\r\n}\r\n","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { Photo, Profile, UserActivity } from \"../models/profile\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class ProfileStore {\r\n  profile: Profile | null = null;\r\n  loadingProfile = false;\r\n  uploading = false;\r\n  loading = false;\r\n  followings: Profile[] = [];\r\n  loadingFollowings = false;\r\n  activeTab = 0;\r\n  userActivities: UserActivity[] = [];\r\n  loadingActivities = false;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    reaction(\r\n      () => this.activeTab,\r\n      (activeTab) => {\r\n        if (activeTab === 3 || activeTab === 4) {\r\n          const predicate = activeTab === 3 ? \"followers\" : \"following\";\r\n          this.loadFollowings(predicate);\r\n        } else {\r\n          this.followings = [];\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  loadUserActivities = async (username: string, predicate?: string) => {\r\n    this.loadingActivities = true;\r\n    try {\r\n      const activities = await agent.Profiles.listActivities(username, predicate!);\r\n      runInAction(() => {\r\n        this.userActivities = activities;\r\n        this.loadingActivities = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.loadingActivities = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  setActiveTab = (activeTab: any) => {\r\n    this.activeTab = activeTab;\r\n  };\r\n\r\n  get isCurrentUser() {\r\n    if (store.userStore.user && this.profile) {\r\n      return store.userStore.user.username === this.profile.username;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  loadProfile = async (username: string) => {\r\n    this.loadingProfile = true;\r\n    try {\r\n      const profile = await agent.Profiles.get(username);\r\n      runInAction(() => {\r\n        this.profile = profile;\r\n        this.loadingProfile = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.loadingProfile = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  uploadPhoto = async (file: Blob) => {\r\n    this.uploading = true;\r\n    try {\r\n      const response = await agent.Profiles.uploadPhoto(file);\r\n      const photo = response.data;\r\n      runInAction(() => {\r\n        if (this.profile) {\r\n          this.profile.photos?.push(photo);\r\n          if (photo.isMain && store.userStore.user) {\r\n            store.userStore.setImage(photo.url);\r\n            this.profile.image = photo.url;\r\n          }\r\n        }\r\n        this.uploading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.uploading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  setMainPhoto = async (photo: Photo) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.setMainPhoto(photo.id);\r\n      store.userStore.setImage(photo.url);\r\n      runInAction(() => {\r\n        if (this.profile && this.profile.photos) {\r\n          this.profile.photos.find((p) => p.isMain)!.isMain = false;\r\n          this.profile.photos.find((p) => p.id === photo.id)!.isMain = true;\r\n          this.profile.image = photo.url;\r\n          this.loading = false;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  deletePhoto = async (photo: Photo) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.deletePhoto(photo.id);\r\n      runInAction(() => {\r\n        if (this.profile) {\r\n          this.profile.photos = this.profile.photos?.filter(\r\n            (p) => p.id !== photo.id\r\n          );\r\n          this.loading = false;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  updateProfile = async (profile: Partial<Profile>) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.updateProfile(profile);\r\n      runInAction(() => {\r\n        if (\r\n          profile.displayName &&\r\n          profile.displayName !== store.userStore.user?.displayName\r\n        ) {\r\n          store.userStore.setDisplayName(profile.displayName);\r\n        }\r\n        this.profile = { ...this.profile, ...(profile as Profile) };\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  updateFollowing = async (username: string, following: boolean) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.updateFollowing(username);\r\n      store.activityStore.updateAttendeeFollowing(username);\r\n      runInAction(() => {\r\n        if (\r\n          this.profile &&\r\n          this.profile.username !== store.userStore.user?.username &&\r\n          this.profile.username === username\r\n        ) {\r\n          following\r\n            ? this.profile.followersCount++\r\n            : this.profile.followersCount--;\r\n          this.profile.following = !this.profile.following;\r\n        }\r\n        if (\r\n          this.profile &&\r\n          this.profile.username === store.userStore.user?.username\r\n        ) {\r\n          following\r\n            ? this.profile.followingCount++\r\n            : this.profile.followingCount--;\r\n        }\r\n        this.followings.forEach((profile) => {\r\n          if (profile.username === username) {\r\n            profile.following\r\n              ? profile.followersCount--\r\n              : profile.followersCount++;\r\n            profile.following = !profile.following;\r\n          }\r\n        });\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  loadFollowings = async (predicate: string) => {\r\n    this.loadingFollowings = true;\r\n    try {\r\n      const followings = await agent.Profiles.listFollowings(\r\n        this.profile?.username!,\r\n        predicate\r\n      );\r\n      runInAction(() => {\r\n        this.followings = followings;\r\n        this.loadingFollowings = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.loadingFollowings = false;\r\n      });\r\n    }\r\n  };\r\n}\r\n","import { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { history } from \"../..\";\r\nimport agent from \"../api/agent\";\r\nimport { User, UserFormValues } from \"../models/user\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class UserStore {\r\n    user: User | null = null;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    get isLoggedIn() {\r\n        return !!this.user;\r\n    }\r\n\r\n    login = async (creds: UserFormValues) => {\r\n        try {\r\n            const user = await agent.Account.login(creds);\r\n            store.commonStore.setToken(user.token);\r\n            runInAction(() => {\r\n                this.user = user;\r\n            })\r\n            history.push('/activities');\r\n            store.modalStore.closeModal();\r\n        } catch(error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    logout = () => {\r\n        store.commonStore.token = null;\r\n        window.localStorage.removeItem('jwt');\r\n        this.user = null;\r\n        history.push('/');\r\n    }\r\n\r\n    getUser = async () => {\r\n        try {\r\n            const user = await agent.Account.current();\r\n            runInAction(() => {\r\n                this.user = user;\r\n            });\r\n        } catch(error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    register = async (creds: UserFormValues) => {\r\n        try {\r\n            const user = await agent.Account.register(creds);\r\n            store.commonStore.setToken(user.token);\r\n            runInAction(() => {\r\n                this.user = user;\r\n            })\r\n            history.push('/activities');\r\n            store.modalStore.closeModal();\r\n        } catch(error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    setImage = (image: string) => {\r\n        if(this.user) {\r\n            this.user.image = image;\r\n        }        \r\n    }\r\n\r\n    setDisplayName = (name: string) => {\r\n        if (this.user) this.user.displayName = name;\r\n       }\r\n}","import { createContext, useContext } from \"react\";\r\nimport ActivityStore from \"./activityStore\";\r\nimport CommentStore from \"./commentStore\";\r\nimport CommonStore from \"./commonStore\";\r\nimport ModalStore from \"./modalStore\";\r\nimport ProfileStore from \"./profileStore\";\r\nimport UserStore from \"./userStore\";\r\n\r\ninterface Store {\r\n    activityStore: ActivityStore;\r\n    commonStore: CommonStore;\r\n    userStore: UserStore;\r\n    modalStore: ModalStore;\r\n    profileStore: ProfileStore;\r\n    commentStore: CommentStore;\r\n}\r\n\r\nexport const store: Store = {\r\n    activityStore: new ActivityStore(),\r\n    commonStore: new CommonStore(),\r\n    userStore: new UserStore(),\r\n    modalStore: new ModalStore(),\r\n    profileStore: new ProfileStore(),\r\n    commentStore: new CommentStore()\r\n}\r\n\r\nexport const StoreContext = createContext(store);\r\n\r\nexport function useStore() {\r\n    return useContext(StoreContext);\r\n}","import { makeAutoObservable, reaction } from \"mobx\";\r\nimport { ServerError } from \"../models/serverError\";\r\n\r\nexport default class CommonStore {\r\n    error: ServerError | null = null;\r\n    token: string | null = window.localStorage.getItem('jwt');\r\n    appLoaded = false;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n\r\n        reaction (\r\n            () => this.token,\r\n            token => {\r\n                if(token) {\r\n                    window.localStorage.setItem('jwt', token);\r\n                } else {\r\n                    window.localStorage.removeItem('jwt');\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    setServerError = (error: ServerError) => {\r\n        this.error = error;\r\n    }\r\n\r\n    setToken = (token: string | null) => {\r\n        this.token = token;\r\n    }\r\n\r\n    setAppLoaded = () => {\r\n        this.appLoaded = true;\r\n    }\r\n}","import { makeAutoObservable } from \"mobx\"\r\n\r\ninterface Modal {\r\n    open: boolean;\r\n    body: JSX.Element | null;\r\n}\r\n\r\nexport default class ModalStore {\r\n    modal: Modal = {\r\n        open: false,\r\n        body: null\r\n    }\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    openModal = (content: JSX.Element) => {\r\n        this.modal.open = true;\r\n        this.modal.body = content;\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.modal.open = false;\r\n        this.modal.body = null;\r\n    }\r\n}","import { HubConnection, HubConnectionBuilder, LogLevel } from \"@microsoft/signalr\";\r\nimport { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { ChatComment } from \"../models/comment\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class CommentStore {\r\n    comments: ChatComment[] = [];\r\n    hubConnection: HubConnection | null = null;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    createHubConnection = (activityId: string) => {\r\n        if(store.activityStore.selectedActivity) {\r\n            this.hubConnection = new HubConnectionBuilder()\r\n                .withUrl(process.env.REACT_APP_CHAT_URL + '?activityId=' + activityId, {\r\n                    //this is where we pass our token\r\n                    accessTokenFactory: () => store.userStore.user?.token!\r\n                })\r\n                .withAutomaticReconnect()\r\n                .configureLogging(LogLevel.Information)\r\n                .build();\r\n            this.hubConnection.start().catch(error => console.log('Error establishing thr connection:', error));\r\n\r\n            this.hubConnection.on('LoadComments', (comments: ChatComment[]) => {\r\n                runInAction(() => {\r\n                    comments.forEach(comment => {\r\n                        comment.createdAt = new Date(comment.createdAt + 'Z');\r\n                    })\r\n                    this.comments = comments;\r\n                })\r\n            })\r\n\r\n            this.hubConnection.on(\"RecieveComment\", (comment: ChatComment) => {\r\n                runInAction(() => {\r\n                    comment.createdAt = new Date(comment.createdAt);\r\n                    this.comments.unshift(comment);\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    stopHubConnection = () => {\r\n        this.hubConnection?.stop().catch(error => console.log(\"Error stopping connection:\", error));\r\n    }\r\n\r\n    clearComments = () => {\r\n        this.comments = [];\r\n        this.stopHubConnection();\r\n    }\r\n\r\n    addComment = async (values: any) => {\r\n        values.activityId = store.activityStore.selectedActivity?.id;\r\n        try {\r\n            //needs to match the name of the method in our ChatHub we want to invoke\r\n            await this.hubConnection?.invoke('SendComment', values);\r\n        } catch(error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}","import { observer } from \"mobx-react-lite\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { Button, Container, Dropdown, Image, Menu } from \"semantic-ui-react\";\r\nimport { useStore } from \"../stores/store\";\r\n\r\nexport default observer(function NavBar() {\r\n  const {userStore: {user, logout}} = useStore();\r\n\r\n  return (\r\n    <Menu inverted fixed=\"top\">\r\n      <Container>\r\n        <Menu.Item as={NavLink} to=\"/\" exact header>\r\n          <img\r\n            src=\"/assets/logo.png\"\r\n            alt=\"logo\"\r\n            style={{ marginRight: \"10px\" }}\r\n          />\r\n          Reactivities\r\n        </Menu.Item>\r\n        <Menu.Item as={NavLink} to=\"/activities\" name=\"Activities\" />\r\n        <Menu.Item as={NavLink} to=\"/errors\" name=\"Errors\" />\r\n        <Menu.Item>\r\n          <Button\r\n            as={NavLink}\r\n            to=\"/createActivity\"\r\n            positive\r\n            content=\"Create Activity\"\r\n          />\r\n        </Menu.Item>\r\n        <Menu.Item position='right'>\r\n          <Image src={user?.image || '/assets/user.png'} avatar spaced='right' />\r\n          <Dropdown pointing='top left' text={user?.displayName}>\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item as={Link} to={`profiles/${user?.username}`} text='My Profile' icon='user' />\r\n              <Dropdown.Item onClick={logout} text='Logout' icon='power' />\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Menu.Item>\r\n      </Container>\r\n    </Menu>\r\n  );\r\n})\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport { Header, Menu } from 'semantic-ui-react';\r\nimport { useStore } from '../../../app/stores/store';\r\n\r\nexport default observer(function ActivityFilters() {\r\n    const {activityStore: {predicate, setPredicate}} = useStore();\r\n\r\n    return (\r\n        <>\r\n        <Menu vertical size='large' style={{width: '100%', marginTop: 27}}>\r\n            <Header icon='filter' attached color='teal' content='Filters'/>\r\n            <Menu.Item                \r\n                content='All Activities' \r\n                active={predicate.has('all')}\r\n                onClick={() => setPredicate('all', 'true')}\r\n            />\r\n            <Menu.Item \r\n                content=\"I'm going\" \r\n                active={predicate.has('isGoing')}\r\n                onClick={() => setPredicate('isGoing', 'true')}\r\n            />\r\n            <Menu.Item \r\n                content=\"I'm hosting\" \r\n                active={predicate.has('isHost')}\r\n                onClick={() => setPredicate('isHost', 'true')}\r\n            />\r\n        </Menu>\r\n        <Header/>\r\n        <Calendar\r\n            onChange={(date) => setPredicate('startDate', date as Date)}\r\n            value={predicate.get('startDate' || new Date())}\r\n        />\r\n        </>\r\n        \r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport React, { SyntheticEvent } from \"react\";\r\nimport { Button, Reveal } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function FollowButton({ profile }: Props) {\r\n    const {profileStore, userStore} = useStore();\r\n    const {updateFollowing, loading} = profileStore;\r\n\r\n    if(userStore.user?.username === profile.username) return null;\r\n\r\n    function handleFollow(e: SyntheticEvent, username: string) {\r\n        e.preventDefault();\r\n        profile.following ? updateFollowing(username, false) : updateFollowing(username, true);\r\n    }\r\n\r\n  return (\r\n    <Reveal animated=\"move\">\r\n      <Reveal.Content visible style={{ width: \"100%\" }}>\r\n        <Button fluid color=\"teal\" content={profile.following ? 'Following' : 'Not following'} />\r\n      </Reveal.Content>\r\n      <Reveal.Content hidden style={{ width: \"100%\" }}>\r\n        <Button\r\n          fluid\r\n          basic\r\n          color={profile.following ? \"red\" : \"green\"}\r\n          content={profile.following ? \"Unfollow\" : \"Follow\"}\r\n          loading={loading}\r\n          onClick={(e) => handleFollow(e, profile.username)}\r\n        />\r\n      </Reveal.Content>\r\n    </Reveal>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Icon, Image } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport FollowButton from \"./FollowButton\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileCard({ profile }: Props) {\r\n  function truncate(str: string | undefined) {\r\n    if (str) {\r\n      return str.length > 40 ? str.substring(0, 37) + \"...\" : str;\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <Card as={Link} to={`/profiles/${profile.username}`}>\r\n      <Image src={profile.image || \"/assets/user.png\"} />\r\n      <Card.Content>\r\n        <Card.Header>{profile.displayName}</Card.Header>\r\n        <Card.Description>{truncate(profile.bio)}</Card.Description>\r\n      </Card.Content>\r\n      <Card.Content extra>\r\n        <Icon name=\"user\" />\r\n        {profile.followersCount} followers\r\n      </Card.Content>\r\n      <FollowButton profile={profile} />\r\n    </Card>\r\n  );\r\n});\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Image, List, Popup } from 'semantic-ui-react';\r\nimport { Profile } from '../../../app/models/profile';\r\nimport ProfileCard from '../../profiles/ProfileCard';\r\n\r\ninterface Props {\r\n    attendees: Profile[];\r\n}\r\n\r\nexport default observer(function ActivityListItemAttendee({attendees} : Props) {\r\n    const styles = {\r\n        borderColor: 'orange',\r\n        borderWidth: 3\r\n    }\r\n\r\n    return (\r\n        <List horizontal>\r\n            {attendees.map(attendee => (\r\n                <Popup hoverable key={attendee.username} trigger={\r\n                    <List.Item key={attendee.username} as={Link} to={`/profiles/${attendee.username}`}>\r\n                        <Image \r\n                            size='mini' \r\n                            circular\r\n                            bordered\r\n                            style={attendee.following ? styles : null} \r\n                            src={attendee.image || '/assets/user.png'} />\r\n                    </List.Item>\r\n                }>\r\n                    <Popup.Content>\r\n                        <ProfileCard profile={attendee} />\r\n                    </Popup.Content>\r\n                </Popup>\r\n                \r\n            ))}\r\n            \r\n        </List>\r\n    )\r\n})","import { format } from \"date-fns\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Icon, Item, Label, Segment } from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../app/models/activity\";\r\nimport ActivityListItemAttendee from \"./ActivityListItemAttendee\";\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default function ActivityListItem({ activity }: Props) {\r\n\r\n  return (\r\n    <Segment.Group>\r\n        <Segment>\r\n            {activity.isCancelled && \r\n                <Label attached='top' color='red' content='Cancelled' style={{textAlign: 'center'}} />\r\n            }\r\n            <Item.Group>\r\n                <Item>\r\n                    <Item.Image style={{marginBottom: 3}} size='tiny' circular src={activity.host?.image || '/assets/user.png'}/>\r\n                    <Item.Content>\r\n                        <Item.Header as={Link} to={`/activities/${activity.id}`}>\r\n                            {activity.title}\r\n                        </Item.Header>\r\n                        <Item.Description>Hosted by <Link to={`/profiles/${activity.hostUsername}`}>{activity.host?.displayName}</Link></Item.Description>\r\n                        {activity.isHost && (\r\n                            <Item.Description>\r\n                                <Label basic color='orange'>\r\n                                    You are hosting this activity\r\n                                </Label>\r\n                            </Item.Description>\r\n                        )}\r\n                        {activity.isGoing && !activity.isHost && (\r\n                            <Item.Description>\r\n                                <Label basic color='green'>\r\n                                    You are going to this activity\r\n                                </Label>\r\n                            </Item.Description>\r\n                        )}\r\n                    </Item.Content>\r\n                </Item>\r\n            </Item.Group>\r\n        </Segment>\r\n        <Segment>\r\n            <span>\r\n                <Icon name='clock'/> {format(activity.date!, 'dd MMM yyyy h:mm aa')}\r\n                <Icon name='marker'/> {activity.venue}\r\n            </span>\r\n        </Segment>\r\n        <Segment secondary>\r\n            <ActivityListItemAttendee attendees={activity.attendees!}/>\r\n        </Segment>\r\n        <Segment clearing>\r\n            <span>\r\n                {activity.description}\r\n            </span>\r\n            <Button as={Link} to={`activities/${activity.id}`} color='teal' floated='right' content='View'/>\r\n        </Segment>\r\n    </Segment.Group>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { Fragment } from \"react\";\r\nimport { Header } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityListItem from \"./ActivityListItem\";\r\n\r\nexport default observer(function ActivityList() {\r\n  const { activityStore } = useStore();\r\n  const { groupedActivities } = activityStore;\r\n\r\n  return (\r\n    <>\r\n      {groupedActivities.map(([group, activities]) => (\r\n        <Fragment key={group}>\r\n          <Header sub color=\"teal\">\r\n            {group}\r\n          </Header>\r\n          {activities.map((activity) => (\r\n            <ActivityListItem key={activity.id} activity={activity} />\r\n          ))}\r\n        </Fragment>\r\n      ))}\r\n    </>\r\n  );\r\n});\r\n","import React, { Fragment } from 'react';\r\nimport { Segment, Button, Placeholder } from 'semantic-ui-react';\r\n\r\nexport default function ActivityListItemPlaceholder() {\r\n    return (\r\n        <Fragment>\r\n            <Placeholder fluid style={{ marginTop: 25 }}>\r\n                <Segment.Group>\r\n                    <Segment style={{ minHeight: 110 }}>\r\n                        <Placeholder>\r\n                            <Placeholder.Header image>\r\n                                <Placeholder.Line />\r\n                                <Placeholder.Line />\r\n                            </Placeholder.Header>\r\n                            <Placeholder.Paragraph>\r\n                                <Placeholder.Line />\r\n                            </Placeholder.Paragraph>\r\n                        </Placeholder>\r\n                    </Segment>\r\n                    <Segment>\r\n                        <Placeholder>\r\n                            <Placeholder.Line />\r\n                            <Placeholder.Line />\r\n                        </Placeholder>\r\n                    </Segment>\r\n                    <Segment secondary style={{ minHeight: 70 }} />\r\n                    <Segment clearing>\r\n                        <Button disabled color='blue' floated='right' content='View' />\r\n                    </Segment>\r\n                </Segment.Group>\r\n            </Placeholder>\r\n        </Fragment>\r\n    );\r\n};\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { useEffect, useState } from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\nimport { Grid, Loader } from \"semantic-ui-react\";\r\nimport { PagingParams } from \"../../../app/models/pagination\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityFilters from \"./ActivityFilters\";\r\nimport ActivityList from \"./ActivityList\";\r\nimport ActivityListItemPlaceholder from \"./ActivityListItemPlaceholder\";\r\n\r\nexport default observer(function ActivityDashboard() {\r\n  //destructuring Store object because at the time we only need activityStore from it\r\n  const { activityStore } = useStore();\r\n  const {\r\n    loadActivities,\r\n    activityRegistry,\r\n    setPagingParams,\r\n    pagination,\r\n  } = activityStore;\r\n  const [loadingNext, setLoadingNext] = useState(false);\r\n\r\n  function handleGetNext() {\r\n    setLoadingNext(true);\r\n    setPagingParams(new PagingParams(pagination!.currentPage + 1));\r\n    loadActivities().then(() => {\r\n      setLoadingNext(false);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (activityRegistry.size <= 1) loadActivities();\r\n  }, [activityRegistry.size, loadActivities]);\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width=\"10\">\r\n        {activityStore.loadingInitial && !loadingNext ? (\r\n          <>\r\n            <ActivityListItemPlaceholder />\r\n            <ActivityListItemPlaceholder />\r\n          </>\r\n        ) : (\r\n          <InfiniteScroll\r\n            pageStart={0}\r\n            loadMore={handleGetNext}\r\n            hasMore={\r\n              !loadingNext &&\r\n              !!pagination &&\r\n              pagination.currentPage < pagination.totalPages\r\n            }\r\n            initialLoad={false}\r\n          >\r\n            <ActivityList />\r\n          </InfiniteScroll>\r\n        )}\r\n      </Grid.Column>\r\n      <Grid.Column width=\"6\">\r\n        <ActivityFilters />\r\n      </Grid.Column>\r\n      <Grid.Column width={10}>\r\n        <Loader active={loadingNext} />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import { useField } from 'formik';\r\nimport React from 'react';\r\nimport { Form, Label } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n    placeholder: string;\r\n    name: string;\r\n    label?: string;\r\n    type?: string;\r\n}\r\n\r\nexport default function MyTextInput(props: Props) {\r\n    const[field, meta] = useField(props.name);\r\n    return (\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n            <label>{props.label}</label>\r\n            <input {...field} {...props} />\r\n            {meta.touched && meta.error ? (\r\n                <Label basic color='red'>{meta.error}</Label>\r\n            ) : null}\r\n        </Form.Field>\r\n    )\r\n}","import { ErrorMessage, Form, Formik } from 'formik';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Button, Header, Label } from 'semantic-ui-react';\r\nimport MyTextInput from '../../app/common/form/MyTextInput';\r\nimport { useStore } from '../../app/stores/store';\r\n\r\nexport default observer(function LoginForm() {\r\n\r\n    const {userStore} = useStore();\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{email: '', password: '', error: null}}\r\n            onSubmit={(values, {setErrors}) => userStore.login(values)\r\n                .catch(error => setErrors({error: 'Invalid email or password'}))} \r\n        >\r\n            {({handleSubmit, isSubmitting, errors}) => (\r\n                <Form className='ui form' onSubmit={handleSubmit} autoComplete='off'>\r\n                    <Header as='h2' content='Login to Reactivities!' color='teal' textAlign='center' />\r\n                    <MyTextInput name='email' placeholder='Email'/>\r\n                    <MyTextInput name='password' placeholder='Password' type='password'/>\r\n                    <ErrorMessage name='error'\r\n                        render={() => <Label style={{marginBottom: 10}} basic color='red' content={errors.error} />}\r\n                    />\r\n                    <Button loading={isSubmitting} positive content='Login' type='submit' fluid />\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    );\r\n});","import React from 'react';\r\nimport { Message } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n    errors: any;\r\n}\r\n\r\nexport default function ValidationErrors({errors} : Props) {\r\n    return (\r\n        <Message error>\r\n            {errors && (\r\n                <Message.List>\r\n                    {errors.map((err : any, i: any) => (\r\n                        <Message.Item key={i}>\r\n                            {err}\r\n                        </Message.Item>\r\n                    ))}\r\n                </Message.List>\r\n            )}\r\n        </Message>\r\n    )\r\n}","import { ErrorMessage, Form, Formik } from 'formik';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Button, Header } from 'semantic-ui-react';\r\nimport MyTextInput from '../../app/common/form/MyTextInput';\r\nimport { useStore } from '../../app/stores/store';\r\nimport * as Yup from 'yup';\r\nimport ValidationErrors from '../errors/ValidationErrors';\r\n\r\nexport default observer(function RegisterForm() {\r\n\r\n    const {userStore} = useStore();\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{displayName: '', username: '', email: '', password: '', error: null}}\r\n            onSubmit={(values, {setErrors}) => userStore.register(values)\r\n                .catch(error => setErrors({error}))} \r\n            validationSchema={Yup.object({\r\n                displayName: Yup.string().required(),\r\n                username: Yup.string().required(),\r\n                email: Yup.string().required().email(),\r\n                password: Yup.string().required()\r\n            })}\r\n        >\r\n            {({handleSubmit, isSubmitting, errors, isValid, dirty}) => (\r\n                <Form className='ui form error' onSubmit={handleSubmit} autoComplete='off'>\r\n                    <Header as='h2' content='Sign up to Reactivities!' color='teal' textAlign='center' />\r\n                    <MyTextInput name='displayName' placeholder='Display Name'/>\r\n                    <MyTextInput name='username' placeholder='Username'/>\r\n                    <MyTextInput name='email' placeholder='Email'/>\r\n                    <MyTextInput name='password' placeholder='Password' type='password'/>\r\n                    <ErrorMessage name='error'\r\n                        render={() => <ValidationErrors errors={errors.error} />}\r\n                    />\r\n                    <Button \r\n                        disabled={!isValid || !dirty || isSubmitting} \r\n                        loading={isSubmitting} positive \r\n                        content='Register' \r\n                        type='submit' fluid />\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    );\r\n});","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Container, Header, Image, Segment } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport LoginForm from \"../users/LoginForm\";\r\nimport RegisterForm from \"../users/RegisterForm\";\r\n\r\nexport default observer(function HomePage() {\r\n  const { userStore, modalStore } = useStore();\r\n\r\n  return (\r\n    <Segment inverted textAlign=\"center\" vertical className=\"masthead\">\r\n      <Container text>\r\n        <Header as=\"h1\" inverted>\r\n          <Image\r\n            size=\"massive\"\r\n            src=\"/assets/logo.png\"\r\n            alt=\"logo\"\r\n            style={{ marginBottom: 12 }}\r\n          />\r\n          Reactivities\r\n        </Header>\r\n        {userStore.isLoggedIn ? (\r\n          <>\r\n            <Header as=\"h2\" inverted content=\"Welcome to Reactivities!\" />\r\n            <Button as={Link} to=\"/activities\" size=\"huge\" inverted>\r\n              Go to Activities!\r\n            </Button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Button onClick={() => modalStore.openModal(<LoginForm />)} size=\"huge\" inverted>\r\n              Login\r\n            </Button>\r\n            <Button onClick={() => modalStore.openModal(<RegisterForm />)} size=\"huge\" inverted>\r\n              Register\r\n            </Button>\r\n          </>\r\n        )}\r\n      </Container>\r\n    </Segment>\r\n  );\r\n});\r\n","import React from 'react';\r\nimport { Dimmer, Loader } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n    inverted?: boolean;\r\n    content: string;\r\n}\r\n\r\nexport default function LoadingComponent({inverted = true, content = 'loading...'}: Props) {\r\n    return (\r\n        <Dimmer active={true} inverted={inverted}>\r\n            <Loader content={content}/>\r\n        </Dimmer>\r\n    )\r\n}","import { useField } from 'formik';\r\nimport React from 'react';\r\nimport { Form, Label } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n    placeholder: string;\r\n    name: string;\r\n    rows: number;\r\n    label?: string;\r\n}\r\n\r\nexport default function MyTextArea(props: Props) {\r\n    const[field, meta] = useField(props.name);\r\n    return (\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n            <label>{props.label}</label>\r\n            <textarea {...field} {...props} />\r\n            {meta.touched && meta.error ? (\r\n                <Label basic color='red'>{meta.error}</Label>\r\n            ) : null}\r\n        </Form.Field>\r\n    )\r\n}","import { useField } from 'formik';\r\nimport React from 'react';\r\nimport { Form, Label, Select } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n    placeholder: string;\r\n    name: string;\r\n    options: any;\r\n    label?: string;\r\n}\r\n\r\nexport default function MySelectInput(props: Props) {\r\n    const[field, meta, helpers] = useField(props.name);\r\n    return (\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n            <label>{props.label}</label>\r\n            <Select \r\n                clearable\r\n                options={props.options}\r\n                value={field.value || null}\r\n                onChange={(e, d) => helpers.setValue(d.value)}\r\n                onBlur={() => helpers.setTouched(true)}\r\n                placeholder={props.placeholder}\r\n            />\r\n            {meta.touched && meta.error ? (\r\n                <Label basic color='red'>{meta.error}</Label>\r\n            ) : null}\r\n        </Form.Field>\r\n    )\r\n}","export const categoryOptions = [\r\n    {text: 'Drinks', value:'drinks'},\r\n    {text: 'Culture', value:'culture'},\r\n    {text: 'Film', value:'film'},\r\n    {text: 'Food', value:'food'},\r\n    {text: 'Music', value:'music'},\r\n    {text: 'Travel', value:'travel'}\r\n]","import { useField } from 'formik';\r\nimport React from 'react';\r\nimport { Form, Label } from 'semantic-ui-react';\r\nimport DatePicker, {ReactDatePickerProps} from 'react-datepicker';\r\n\r\nexport default function MyDateInput(props : Partial<ReactDatePickerProps>) {\r\n    const[field, meta, helpers] = useField(props.name!);\r\n    return (\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n            <DatePicker\r\n                {...field}\r\n                {...props}\r\n                selected={(field.value && new Date(field.value)) || null}\r\n                onChange={value => helpers.setValue(value)}\r\n            />\r\n            {meta.touched && meta.error ? (\r\n                <Label basic color='red'>{meta.error}</Label>\r\n            ) : null}\r\n        </Form.Field>\r\n    )\r\n}","import { observer } from 'mobx-react-lite';\r\nimport { useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router';\r\nimport { Button, Header, Segment } from 'semantic-ui-react';\r\nimport LoadingComponent from '../../../app/layout/LoadingComponent';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport { Link } from 'react-router-dom';\r\nimport { Formik, Form } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport MyTextInput from '../../../app/common/form/MyTextInput';\r\nimport MyTextArea from '../../../app/common/form/MyTextArea';\r\nimport MySelectInput from '../../../app/common/form/MySelectInput';\r\nimport { categoryOptions } from '../../../app/common/options/CategoryOptions';\r\nimport MyDateInput from '../../../app/common/form/MyDateInput';\r\nimport { ActivityFormValues } from '../../../app/models/activity';\r\nimport {v4 as uuid} from 'uuid'\r\n\r\nexport default observer(function ActivityForm() {\r\n\r\n    const history = useHistory();\r\n    const {activityStore} = useStore();\r\n    const {createActivity, updateActivity, loadActivity, loadingInitial} = activityStore;\r\n    const {id} = useParams<{id: string}>();\r\n\r\n    const [activity, setActivity] = useState<ActivityFormValues>(new ActivityFormValues());\r\n\r\n    const validationSchema = Yup.object({\r\n        title: Yup.string().required('The activity title is required'),\r\n        description: Yup.string().required('The activity description is required'),\r\n        category: Yup.string().required(),\r\n        date: Yup.string().required('Date is required').nullable(),\r\n        city: Yup.string().required(),\r\n        venue: Yup.string().required(),\r\n    })\r\n\r\n    useEffect(() => {\r\n        if(id) loadActivity(id).then(activity => setActivity(new ActivityFormValues(activity)));\r\n    }, [id, loadActivity])\r\n\r\n     function handleFormSubmit(activity: ActivityFormValues) {\r\n         if(!activity.id) {\r\n             let newActivity = {\r\n                 ...activity, \r\n                 id: uuid()\r\n             };\r\n             createActivity(newActivity).then(() => {\r\n                 history.push(`/activities/${newActivity.id}`);\r\n             });\r\n         } else {\r\n             updateActivity(activity).then(() => {\r\n                 history.push(`/activities/${activity.id}`);\r\n             })\r\n         }\r\n     }\r\n\r\n    if(loadingInitial) return <LoadingComponent content='Loading activity...'/>\r\n\r\n    return (\r\n        <Segment clearing>\r\n            <Header content='Activity Details' sub color='teal' />\r\n            <Formik \r\n                validationSchema={validationSchema}\r\n                enableReinitialize \r\n                initialValues={activity} \r\n                onSubmit={values => handleFormSubmit(values)}\r\n                >\r\n                {({handleSubmit, isSubmitting, dirty, isValid}) => (\r\n                    <Form className='ui form' onSubmit={handleSubmit} autoComplete='off'>\r\n                    <MyTextInput placeholder='Title' name='title' />\r\n                    <MyTextArea rows={3} placeholder='Description' name='description'/>\r\n                    <MySelectInput options={categoryOptions} placeholder='Category' name='category'/>\r\n                    <MyDateInput \r\n                        placeholderText='Date' \r\n                        name='date' \r\n                        showTimeSelect \r\n                        timeCaption='time' \r\n                        dateFormat='MMMM d, yyyy h:mm:aa' \r\n                    />\r\n                    <Header content='Location Details' sub color='teal' />\r\n                    <MyTextInput placeholder='City' name='city'/>\r\n                    <MyTextInput placeholder='Venue' name='venue'/>\r\n                    <Button \r\n                        disabled={isSubmitting || !dirty || !isValid} \r\n                        loading={isSubmitting} floated='right' \r\n                        positive type='submit' \r\n                        content='Submit'/>\r\n                    <Button as={Link} to='/activities' floated='right' type='button' content='Cancel'/>\r\n                </Form>\r\n                )}\r\n            </Formik>\r\n        </Segment>\r\n    )\r\n})","import { Field, FieldProps, Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Segment, Header, Comment, Loader } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport * as Yup from \"yup\";\r\nimport { formatDistanceToNow } from \"date-fns\";\r\n\r\ninterface Props {\r\n  activityId: string;\r\n}\r\n\r\nexport default observer(function ActivityDetailedChat({ activityId }: Props) {\r\n  const { commentStore } = useStore();\r\n\r\n  useEffect(() => {\r\n    if (activityId) {\r\n      commentStore.createHubConnection(activityId);\r\n    }\r\n    return () => {\r\n      commentStore.clearComments();\r\n    };\r\n  }, [commentStore, activityId]);\r\n\r\n  return (\r\n    <>\r\n      <Segment\r\n        textAlign=\"center\"\r\n        attached=\"top\"\r\n        inverted\r\n        color=\"teal\"\r\n        style={{ border: \"none\" }}\r\n      >\r\n        <Header>Chat about this event</Header>\r\n      </Segment>\r\n      <Segment clearing attached>\r\n        <Formik\r\n          onSubmit={(values, { resetForm }) =>\r\n            commentStore.addComment(values).then(() => resetForm())\r\n          }\r\n          initialValues={{ body: \"\" }}\r\n          validationSchema={Yup.object({\r\n            body: Yup.string().required(),\r\n          })}\r\n        >\r\n          {({ isSubmitting, isValid, handleSubmit }) => (\r\n            <Form className=\"ui form\">\r\n              <Field name=\"body\">\r\n                {(props: FieldProps) => (\r\n                  <div style={{ position: \"relative\" }}>\r\n                    <Loader active={isSubmitting} />\r\n                    <textarea\r\n                      placeholder=\"Enter your comment (Enter for submit, SHIFT + Enter for new line)\"\r\n                      rows={2}\r\n                      //props contain onChange, onBlur, value of the field etc..\r\n                      {...props.field}\r\n                      onKeyPress={(e) => {\r\n                        if (e.key === \"Enter\" && e.shiftKey) {\r\n                          return;\r\n                        }\r\n                        if (e.key === \"Enter\" && !e.shiftKey) {\r\n                          e.preventDefault();\r\n                          isValid && handleSubmit();\r\n                        }\r\n                      }}\r\n                    />\r\n                  </div>\r\n                )}\r\n              </Field>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n        <Comment.Group>\r\n          {commentStore.comments.map((comment) => (\r\n            <Comment key={comment.id}>\r\n              <Comment.Avatar src={comment.image || \"/assets/user.png\"} />\r\n              <Comment.Content>\r\n                <Comment.Author as={Link} to={`/profiles/${comment.username}`}>\r\n                  {comment.displayName}\r\n                </Comment.Author>\r\n                <Comment.Metadata>\r\n                  <div>{formatDistanceToNow(comment.createdAt)} ago</div>\r\n                </Comment.Metadata>\r\n                <Comment.Text style={{ whiteSpace: \"pre-wrap\" }}>\r\n                  {comment.body}\r\n                </Comment.Text>\r\n              </Comment.Content>\r\n            </Comment>\r\n          ))}\r\n        </Comment.Group>\r\n      </Segment>\r\n    </>\r\n  );\r\n});\r\n","import { format } from \"date-fns\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Header, Item, Segment, Image, Label } from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../app/models/activity\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\nconst activityImageStyle = {\r\n  filter: \"brightness(30%)\",\r\n};\r\n\r\nconst activityImageTextStyle = {\r\n  position: \"absolute\",\r\n  bottom: \"5%\",\r\n  left: \"5%\",\r\n  width: \"100%\",\r\n  height: \"auto\",\r\n  color: \"white\",\r\n};\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedHeader({ activity }: Props) {\r\n  const {\r\n    activityStore: { updateAttendance, loading, cancelActivityToggle },\r\n  } = useStore();\r\n\r\n  return (\r\n    <Segment.Group>\r\n      <Segment basic attached=\"top\" style={{ padding: \"0\" }}>\r\n        {activity.isCancelled && (\r\n          <Label\r\n            style={{ position: \"absolute\", zIndex: 1000, left: -14, top: 20 }}\r\n            ribbon\r\n            color=\"red\"\r\n            content=\"Cancelled\"\r\n          />\r\n        )}\r\n        <Image\r\n          src={`/assets/categoryImages/${activity.category}.jpg`}\r\n          fluid\r\n          style={activityImageStyle}\r\n        />\r\n        <Segment style={activityImageTextStyle} basic>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Content>\r\n                <Header\r\n                  size=\"huge\"\r\n                  content={activity.title}\r\n                  style={{ color: \"white\" }}\r\n                />\r\n                <p>{format(activity.date!, \"dd MMM yyyy\")}</p>\r\n                <p>\r\n                  Hosted by{\" \"}\r\n                  <strong>\r\n                    <Link to={`/profiles/${activity.host?.username}`}>\r\n                      {activity.host?.displayName}\r\n                    </Link>\r\n                  </strong>\r\n                </p>\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Segment>\r\n      </Segment>\r\n      <Segment clearing attached=\"bottom\">\r\n        {activity.isHost ? (\r\n          <>\r\n            <Button color={activity.isCancelled ? 'green' : 'red'} floated='left' basic \r\n              content={activity.isCancelled ? 'Re-activate Activity' : 'Cancel Activity'}\r\n              onClick={cancelActivityToggle}\r\n              loading={loading}\r\n              />\r\n            <Button\r\n            disabled={activity.isCancelled}\r\n              as={Link}\r\n              to={`/manage/${activity.id}`}\r\n              color=\"orange\"\r\n              floated=\"right\"\r\n            >\r\n              Manage Event\r\n            </Button>\r\n          </>\r\n        ) : activity.isGoing ? (\r\n          <Button loading={loading} onClick={updateAttendance}>\r\n            Cancel attendance\r\n          </Button>\r\n        ) : (\r\n          <Button disabled={activity.isCancelled} loading={loading} onClick={updateAttendance} color=\"teal\">\r\n            Join Activity\r\n          </Button>\r\n        )}\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n});\r\n","import { format } from \"date-fns\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Segment, Grid, Icon } from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../app/models/activity\";\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedInfo({ activity }: Props) {\r\n  return (\r\n    <Segment.Group>\r\n      <Segment attached=\"top\">\r\n        <Grid>\r\n          <Grid.Column width={1}>\r\n            <Icon size=\"large\" color=\"teal\" name=\"info\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={15}>\r\n            <p>{activity.description}</p>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n      <Segment attached>\r\n        <Grid verticalAlign=\"middle\">\r\n          <Grid.Column width={1}>\r\n            <Icon name=\"calendar\" size=\"large\" color=\"teal\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={15}>\r\n            <span>{format(activity.date!, 'dd MMM yyyy h:mm aa')}</span>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n      <Segment attached>\r\n        <Grid verticalAlign=\"middle\">\r\n          <Grid.Column width={1}>\r\n            <Icon name=\"marker\" size=\"large\" color=\"teal\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={11}>\r\n            <span>\r\n              {activity.venue}, {activity.city}\r\n            </span>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Segment, List, Label, Item, Image } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Activity } from \"../../../app/models/activity\";\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedSidebar({ activity: {attendees, host} }: Props) {\r\n  if(!attendees) return null;\r\n  return (\r\n    <>\r\n      <Segment\r\n        textAlign=\"center\"\r\n        style={{ border: \"none\" }}\r\n        attached=\"top\"\r\n        secondary\r\n        inverted\r\n        color=\"teal\"\r\n      >\r\n        {attendees.length} {attendees.length === 1 ? \"Person\" : \"People\"} going\r\n      </Segment>\r\n      <Segment attached>\r\n        <List relaxed divided>\r\n          {attendees.map((attendee) => (\r\n            <Item style={{ position: \"relative\" }} key={attendee.username}>\r\n              {attendee.username === host?.username && \r\n                <Label\r\n                  style={{ position: \"absolute\" }}\r\n                  color=\"orange\"\r\n                  ribbon=\"right\"\r\n                >\r\n                  Host\r\n                </Label>\r\n              }          \r\n              <Image size=\"tiny\" src={attendee.image || \"/assets/user.png\"} />\r\n              <Item.Content verticalAlign=\"middle\">\r\n                <Item.Header as=\"h3\">\r\n                  <Link to={`profiles/${attendee.username}`}>\r\n                    {attendee.displayName}\r\n                  </Link>\r\n                </Item.Header>\r\n                {attendee.following &&\r\n                <Item.Extra style={{ color: \"orange\" }}>Following</Item.Extra>}\r\n              </Item.Content>\r\n            </Item>\r\n          ))}\r\n        </List>\r\n      </Segment>\r\n    </>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityDetailedChat from \"./ActivityDetailedChat\";\r\nimport ActivityDetailedHeader from \"./ActivityDetailedHeader\";\r\nimport ActivityDetailedInfo from \"./ActivityDetailedInfo\";\r\nimport ActivityDetailedSidebar from \"./ActivityDetailedSidebar\";\r\n\r\nexport default observer(function ActivityDetails() {\r\n\r\n  const {activityStore} = useStore();\r\n  const {selectedActivity: activity, loadActivity, loadingInitial, clearSelectedActivity} = activityStore;\r\n  const {id} = useParams<{id: string}>(); \r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      loadActivity(id);\r\n    }\r\n    return () => clearSelectedActivity();\r\n  }, [id, loadActivity, clearSelectedActivity])\r\n\r\n  if(loadingInitial || !activity) return <LoadingComponent content='nope'/>;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={10}>\r\n        <ActivityDetailedHeader activity={activity}/>\r\n        <ActivityDetailedInfo activity={activity}/>\r\n        <ActivityDetailedChat activityId={activity.id} />\r\n      </Grid.Column>\r\n      <Grid.Column width={6}>\r\n        <ActivityDetailedSidebar activity={activity}/>\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n})\r\n","import React, { useState } from 'react';\r\nimport {Button, Header, Segment} from \"semantic-ui-react\";\r\nimport axios from 'axios';\r\nimport ValidationErrors from './ValidationErrors';\r\n\r\nexport default function TestErrors() {\r\n    const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\n    const [errors, setErrors] = useState(null);\r\n\r\n    function handleNotFound() {\r\n        axios.get(baseUrl + 'buggy/not-found').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleBadRequest() {\r\n        axios.get(baseUrl + 'buggy/bad-request').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleServerError() {\r\n        axios.get(baseUrl + 'buggy/server-error').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleUnauthorised() {\r\n        axios.get(baseUrl + 'buggy/unauthorised').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleBadGuid() {\r\n        axios.get(baseUrl + 'activities/notaguid').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleValidationError() {\r\n        axios.post(baseUrl + 'activities', {}).catch(err => setErrors(err));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header as='h1' content='Test Error component' />\r\n            <Segment>\r\n                <Button.Group widths='7'>\r\n                    <Button onClick={handleNotFound} content='Not Found' basic primary />\r\n                    <Button onClick={handleBadRequest} content='Bad Request' basic primary />\r\n                    <Button onClick={handleValidationError} content='Validation Error' basic primary />\r\n                    <Button onClick={handleServerError} content='Server Error' basic primary />\r\n                    <Button onClick={handleUnauthorised} content='Unauthorised' basic primary />\r\n                    <Button onClick={handleBadGuid} content='Bad Guid' basic primary />\r\n                </Button.Group>\r\n            </Segment>\r\n            {errors &&\r\n            <ValidationErrors errors={errors}/> }\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Header, Icon, Segment } from 'semantic-ui-react';\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <Segment placeholder>\r\n            <Header icon>\r\n                <Icon name='search' />\r\n                Oops, we've looked everywhere and could not find this.\r\n            </Header>\r\n            <Segment.Inline>\r\n                <Button as={Link} to='/activities' primary>\r\n                    Return to activities page\r\n                </Button>\r\n            </Segment.Inline>\r\n        </Segment>\r\n    )\r\n}","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Container, Header, Segment } from 'semantic-ui-react';\r\nimport { useStore } from '../../app/stores/store';\r\n\r\nexport default observer(function ServerError() {\r\n    const {commonStore} = useStore();\r\n\r\n    return (\r\n        <Container>\r\n            <Header as='h1' content='Server Error'/>\r\n            <Header sub as='h5' color='red' content={commonStore.error?.message} />\r\n            {commonStore.error?.details && \r\n                <Segment>\r\n                    <Header as='h4' content='Stack trace' color='teal' />\r\n                    <code style={{marginTop: '10px'}}>{commonStore.error.details}</code>\r\n                </Segment>\r\n            }\r\n        </Container>\r\n    )\r\n})","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Modal } from 'semantic-ui-react';\r\nimport { useStore } from '../../stores/store';\r\n\r\nexport default observer(function ModalContainer() {\r\n    const {modalStore} = useStore();\r\n\r\n    return (\r\n        <Modal open={modalStore.modal.open} onClose={modalStore.closeModal} size='mini'>\r\n            <Modal.Content>\r\n                {modalStore.modal.body}\r\n            </Modal.Content>\r\n        </Modal>\r\n    );\r\n});","import { Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport MyTextArea from \"../../app/common/form/MyTextArea\";\r\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport * as Yup from \"yup\";\r\ninterface Props {\r\n  setEditMode: (editMode: boolean) => void;\r\n}\r\nexport default observer(function ProfileEditForm({ setEditMode }: Props) {\r\n  const {\r\n    profileStore: { profile, updateProfile },\r\n  } = useStore();\r\n  return (\r\n    <Formik\r\n      initialValues={{ displayName: profile?.displayName, bio: profile?.bio }}\r\n      onSubmit={(values) => {\r\n        updateProfile(values).then(() => {\r\n          setEditMode(false);\r\n        });\r\n      }}\r\n      validationSchema={Yup.object({\r\n        displayName: Yup.string().required(),\r\n      })}\r\n    >\r\n      {({ isSubmitting, isValid, dirty }) => (\r\n        <Form className=\"ui form\">\r\n          <MyTextInput placeholder=\"Display Name\" name=\"displayName\" />\r\n          <MyTextArea rows={3} placeholder=\"Add your bio\" name=\"bio\" />\r\n          <Button\r\n            positive\r\n            type=\"submit\"\r\n            loading={isSubmitting}\r\n            content=\"Update profile\"\r\n            floated=\"right\"\r\n            disabled={!isValid || !dirty}\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import React, { useState } from \"react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport { Button, Grid, Header, Tab } from \"semantic-ui-react\";\r\nimport ProfileEditForm from \"./ProfileEditForm\";\r\nimport { observer } from \"mobx-react-lite\";\r\nexport default observer(function ProfileAbout() {\r\n  const { profileStore } = useStore();\r\n  const { isCurrentUser, profile } = profileStore;\r\n  const [editMode, setEditMode] = useState(false);\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width=\"16\">\r\n          <Header\r\n            floated=\"left\"\r\n            icon=\"user\"\r\n            content={`About ${profile?.displayName}`}\r\n          />\r\n          {isCurrentUser && (\r\n            <Button\r\n              floated=\"right\"\r\n              basic\r\n              content={editMode ? \"Cancel\" : \"Edit Profile\"}\r\n              onClick={() => setEditMode(!editMode)}\r\n            />\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width=\"16\">\r\n          {editMode ? (\r\n            <ProfileEditForm setEditMode={setEditMode} />\r\n          ) : (\r\n            <span style={{ whiteSpace: \"pre-wrap\" }}>{profile?.bio}</span>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import React, { SyntheticEvent, useEffect } from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Tab, Grid, Header, Card, Image, TabProps } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserActivity } from \"../../app/models/profile\";\r\nimport { format } from \"date-fns\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nconst panes = [\r\n  { menuItem: \"Future Events\", pane: { key: \"future\" } },\r\n  { menuItem: \"Past Events\", pane: { key: \"past\" } },\r\n  { menuItem: \"Hosting\", pane: { key: \"hosting\" } },\r\n];\r\nexport default observer(function ProfileActivities() {\r\n  const { profileStore } = useStore();\r\n  const {\r\n    loadUserActivities,\r\n    profile,\r\n    loadingActivities,\r\n    userActivities,\r\n  } = profileStore;\r\n  useEffect(() => {\r\n    loadUserActivities(profile!.username);\r\n  }, [loadUserActivities, profile]);\r\n  const handleTabChange = (e: SyntheticEvent, data: TabProps) => {\r\n    loadUserActivities(\r\n      profile!.username,\r\n      panes[data.activeIndex as number].pane.key\r\n    );\r\n  };\r\n  return (\r\n    <Tab.Pane loading={loadingActivities}>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header floated=\"left\" icon=\"calendar\" content={\"Activities\"} />\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          <Tab\r\n            panes={panes}\r\n            menu={{ secondary: true, pointing: true }}\r\n            onTabChange={(e, data) => handleTabChange(e, data)}\r\n          />\r\n          <br />\r\n          <Card.Group itemsPerRow={4}>\r\n            {userActivities.map((activity: UserActivity) => (\r\n              <Card\r\n                as={Link}\r\n                to={`/activities/${activity.id}`}\r\n                key={activity.id}\r\n              >\r\n                <Image\r\n                  src={`/assets/categoryImages/${activity.category}.jpg`}\r\n                  style={{ minHeight: 100, objectFit: \"cover\" }}\r\n                />\r\n                <Card.Content>\r\n                  <Card.Header textAlign=\"center\">{activity.title}</Card.Header>\r\n                  <Card.Meta textAlign=\"center\">\r\n                    <div>{format(new Date(activity.date), \"do LLL\")}</div>\r\n                    <div>{format(new Date(activity.date), \"h:mm a\")}</div>\r\n                  </Card.Meta>\r\n                </Card.Content>\r\n              </Card>\r\n            ))}\r\n          </Card.Group>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Card, Grid, Header, Tab } from 'semantic-ui-react';\r\nimport { useStore } from '../../app/stores/store';\r\nimport ProfileCard from './ProfileCard';\r\n\r\nexport default observer(function ProfileFollowings() {\r\n    const {profileStore} = useStore();\r\n    const {profile, followings, loadingFollowings, activeTab} = profileStore;\r\n\r\n    return (\r\n        <Tab.Pane loading={loadingFollowings}>\r\n            <Grid>\r\n                <Grid.Column width={16}>\r\n                    <Header \r\n                        floated='left' \r\n                        icon='user' \r\n                        content={activeTab === 3 ? `People following ${profile?.displayName}` : \r\n                            `People ${profile?.displayName} is following`} />\r\n                </Grid.Column>\r\n                <Grid.Column width={16}>\r\n                    <Card.Group itemsPerRow={4}>\r\n                        {followings.map(profile => (\r\n                            <ProfileCard key={profile.username} profile={profile} />\r\n                        ))}\r\n                    </Card.Group>\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Tab.Pane>\r\n    )\r\n})","import React from 'react';\r\nimport { Cropper } from 'react-cropper';\r\nimport 'cropperjs/dist/cropper.css'\r\n\r\ninterface Props {\r\n    imagePreview: string;\r\n    setCropper: (cropper: Cropper) => void;\r\n}\r\n\r\nexport default function PhotoWidgetCropper({imagePreview, setCropper} : Props) {\r\n    return (\r\n        <Cropper\r\n            src={imagePreview}\r\n            style={{height: 200, width: '100%'}}\r\n            initialAspectRatio={1}\r\n            aspectRatio={1}\r\n            preview='.img-preview'\r\n            guides={false}\r\n            viewMode={1}\r\n            autoCropArea={1}\r\n            background={false}\r\n            onInitialized={cropper => setCropper(cropper)}\r\n        />\r\n    )\r\n}","import React, {useCallback} from 'react'\r\nimport {useDropzone} from 'react-dropzone'\r\nimport { Header, Icon } from 'semantic-ui-react'\r\n\r\ninterface Props {\r\n    setFiles: (files: any) => void;\r\n}\r\n\r\nexport default function PhotoWidgetDropzone({setFiles} : Props) {\r\n    const dzStyles = {\r\n        border: 'dashed 3px #eee',\r\n        borderColor: '#eee',\r\n        borderRadius: '5px',\r\n        paddingTop: '30px',\r\n        textAlign: 'center' as 'center',\r\n        height: 200\r\n    }\r\n\r\n    const dzActive = {\r\n        borderColor: 'green'\r\n    }\r\n\r\n  const onDrop = useCallback(acceptedFiles => {\r\n    setFiles(acceptedFiles.map((file: any) => Object.assign(file, {\r\n        preview: URL.createObjectURL(file)\r\n    })))\r\n  }, [setFiles])\r\n  const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\r\n\r\n  return (\r\n    <div {...getRootProps()} style={isDragActive ? {...dzStyles, ...dzActive} : dzStyles}>\r\n      <input {...getInputProps()} />\r\n      <Icon name='upload' size='huge' />\r\n      <Header content='Drop image here' />\r\n    </div>\r\n  )\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Grid, Header } from \"semantic-ui-react\";\r\nimport PhotoWidgetCropper from \"./PhotoWidgetCropper\";\r\nimport PhotoWidgetDropzone from \"./PhotoWidgetDropzone\";\r\n\r\ninterface Props {\r\n    loading: boolean;\r\n    uploadPhoto: (file: Blob) => void;\r\n}\r\n\r\nexport default function PhotoUploadWidget({loading, uploadPhoto} : Props) {\r\n  const [files, setFiles] = useState<any>([]);\r\n  const [cropper, setCropper] = useState<Cropper>();\r\n\r\n  function onCrop() {\r\n    if (cropper) {\r\n      cropper.getCroppedCanvas().toBlob((blob) => uploadPhoto(blob!));\r\n    }\r\n  }\r\n\r\n  //cleaning up after ourselves because file.preview would've otherwise stayed in memory\r\n  useEffect(() => {\r\n    return () => {\r\n      files.forEach((file: any) => URL.revokeObjectURL(file.preview));\r\n    };\r\n  }, [files]);\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={4}>\r\n        <Header sub color=\"teal\" content=\"Step 1 - Add Photo\" />\r\n        <PhotoWidgetDropzone setFiles={setFiles} />\r\n      </Grid.Column>\r\n      <Grid.Column width={1} />\r\n      <Grid.Column width={4}>\r\n        <Header sub color=\"teal\" content=\"Step 2 - Resize image\" />\r\n        {files && files.length > 0 && (\r\n          <PhotoWidgetCropper\r\n            setCropper={setCropper}\r\n            imagePreview={files[0].preview}\r\n          />\r\n        )}\r\n      </Grid.Column>\r\n      <Grid.Column width={1} />\r\n      <Grid.Column width={4}>\r\n        <Header sub color=\"teal\" content=\"Step 3 - Preview & upload\" />\r\n        {files && files.length > 0 && (\r\n          <>\r\n            <div\r\n              className='img-preview'\r\n              style={{ minHeight: 200, overflow: \"hidden\" }}\r\n            />\r\n            <Button.Group widths={2}>\r\n              <Button loading={loading} onClick={onCrop} positive icon=\"check\" />\r\n              <Button disabled={loading} onClick={() => setFiles([])} icon=\"close\" />\r\n            </Button.Group>\r\n          </>\r\n        )}\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { SyntheticEvent, useState } from \"react\";\r\nimport { Button, Card, Grid, Header, Image, Tab } from \"semantic-ui-react\";\r\nimport PhotoUploadWidget from \"../../app/common/imageUpload/PhotoUploadWidget\";\r\nimport { Photo, Profile } from \"../../app/models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfilePhotos({ profile }: Props) {\r\n  const { profileStore: { isCurrentUser, uploadPhoto, \r\n    uploading, loading, setMainPhoto, deletePhoto }} = useStore();\r\n  const [addPhotoMode, setAddPhotoMode] = useState(false);\r\n  const [target, setTarget] = useState('');\r\n\r\n  function handlePhotoUpload(file: Blob) {\r\n    uploadPhoto(file).then(() => setAddPhotoMode(false));\r\n  }\r\n\r\n  function handleSetMainPhoto(photo: Photo, e: SyntheticEvent<HTMLButtonElement>) {\r\n    setTarget(e.currentTarget.name);\r\n    setMainPhoto(photo);\r\n  }\r\n\r\n  function handleDeletePhoto(photo: Photo, e: SyntheticEvent<HTMLButtonElement>) {\r\n    setTarget(e.currentTarget.name);\r\n    deletePhoto(photo);\r\n  }\r\n\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header floated=\"left\" icon=\"image\" content=\"Photos\" />\r\n          {isCurrentUser && (\r\n            <Button\r\n              floated=\"right\"\r\n              basic\r\n              content={addPhotoMode ? \"Cancel\" : \"Add Photo\"}\r\n              onClick={() => setAddPhotoMode(!addPhotoMode)}\r\n            />\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          {addPhotoMode ? (\r\n            <PhotoUploadWidget uploadPhoto={handlePhotoUpload} loading={uploading} />\r\n          ) : (\r\n            <Card.Group itemsPerRow={5}>\r\n              {profile.photos?.map((photo) => (\r\n                <Card key={photo.id}>\r\n                  <Image src={photo.url} />\r\n                  {isCurrentUser && (\r\n                    <Button.Group fluid widths={2}>\r\n                      <Button basic color='green' content='Main' \r\n                      name={'main' + photo.id} disabled={photo.isMain} \r\n                      loading={target === 'main' + photo.id && loading}\r\n                      onClick={e => handleSetMainPhoto(photo, e)} \r\n                      />\r\n                      <Button \r\n                        basic color='red' icon='trash'\r\n                        loading={target === photo.id && loading}\r\n                        onClick={e => handleDeletePhoto(photo, e)}\r\n                        disabled={photo.isMain}\r\n                        name={photo.id}\r\n                      />\r\n                    </Button.Group>\r\n                  )}\r\n                </Card>\r\n              ))}\r\n            </Card.Group>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Tab } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileAbout from \"./ProfileAbout\";\r\nimport ProfileActivities from \"./ProfileActivities\";\r\nimport ProfileFollowings from \"./ProfileFollowings\";\r\nimport ProfilePhotos from \"./ProfilePhotos\";\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\nexport default observer(function ProfileContent({ profile }: Props) {\r\n  const {profileStore} = useStore();\r\n\r\n  const panes = [\r\n    { menuItem: \"About\", render: () => <ProfileAbout /> },\r\n    { menuItem: \"Photos\", render: () => <ProfilePhotos profile={profile} /> },\r\n    { menuItem: \"Events\", render: () => <Tab.Pane><ProfileActivities/></Tab.Pane> },\r\n    {\r\n      menuItem: \"Followers\",\r\n      render: () => <Tab.Pane><ProfileFollowings/></Tab.Pane>,\r\n    },\r\n    {\r\n      menuItem: \"Following\",\r\n      render: () => <Tab.Pane><ProfileFollowings/></Tab.Pane>,\r\n    },\r\n  ];\r\n  return (\r\n    <Tab\r\n      menu={{ fluid: true, vertical: true }}\r\n      menuPosition=\"right\"\r\n      panes={panes}\r\n      onTabChange={(e, data) => profileStore.setActiveTab(data.activeIndex)}\r\n    />\r\n  );\r\n});\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Divider, Grid, Header, Item, Segment, Statistic } from 'semantic-ui-react';\r\nimport { Profile } from '../../app/models/profile';\r\nimport FollowButton from './FollowButton';\r\n\r\ninterface Props {\r\n    profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileHeader({profile} : Props) {\r\n    return (\r\n        <Segment>\r\n            <Grid>\r\n                <Grid.Column width={12}>\r\n                    <Item.Group>\r\n                        <Item>\r\n                            <Item.Image avatar size='small' src={profile.image || '/assets/user.png'} />\r\n                            <Item.Content verticalAlign='middle'>\r\n                                <Header as='h2' content={profile.displayName} />\r\n                            </Item.Content>\r\n                        </Item>\r\n                    </Item.Group>\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Statistic.Group widths={2}>\r\n                        <Statistic label='Followers' value={profile.followersCount} />\r\n                        <Statistic label='Following' value={profile.followingCount} />\r\n                    </Statistic.Group>\r\n                    <Divider/>\r\n                    <FollowButton profile={profile} />\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Segment>\r\n    )\r\n})","import { observer } from 'mobx-react-lite';\r\nimport React, { useEffect } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { Grid } from 'semantic-ui-react';\r\nimport LoadingComponent from '../../app/layout/LoadingComponent';\r\nimport { useStore } from '../../app/stores/store';\r\nimport ProfileContent from './ProfileContent';\r\nimport ProfileHeader from './ProfileHeader';\r\n\r\nexport default observer(function ProfilePage() {\r\n    const {username} = useParams<{username: string}>();\r\n    const {profileStore} = useStore();\r\n    const {loadingProfile, loadProfile, profile, setActiveTab} = profileStore;\r\n\r\n    useEffect(() => {\r\n        loadProfile(username);\r\n        return () => {\r\n            setActiveTab(0);\r\n        }\r\n    }, [loadProfile, username, setActiveTab])\r\n\r\n    if(loadingProfile) return <LoadingComponent content='Loading profile..' />\r\n\r\n    return (\r\n        <Grid>\r\n            <Grid.Column width={16}>\r\n                {profile &&\r\n                    <>\r\n                        <ProfileHeader profile={profile} />\r\n                        <ProfileContent profile={profile} />\r\n                    </>      \r\n                }                        \r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n})","import React from \"react\";\r\nimport { Redirect, Route, RouteComponentProps, RouteProps } from \"react-router\";\r\nimport { useStore } from \"../stores/store\";\r\n\r\ninterface Props extends RouteProps {\r\n    component: React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any>;\r\n}\r\n\r\nexport default function PrivateRoute({component: Component, ...rest} : Props  ) {\r\n    const {userStore: {isLoggedIn}} = useStore();\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) => isLoggedIn ? <Component {...props} /> : <Redirect to='/' />}\r\n        />\r\n    )\r\n}","import { Container } from \"semantic-ui-react\";\r\nimport React from 'react';\r\nimport NavBar from \"./navbar\";\r\nimport ActivityDashboard from \"../../features/activities/dashboard/ActivityDashboard\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Route, Switch, useLocation } from \"react-router\";\r\nimport HomePage from \"../../features/home/HomePage\";\r\nimport ActivityForm from \"../../features/activities/form/ActivityForm\";\r\nimport ActivityDetails from \"../../features/activities/details/ActivityDetails\";\r\nimport TestErrors from \"../../features/errors/TestError\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport NotFound from \"../../features/errors/NotFound\";\r\nimport ServerError from \"../../features/errors/ServerError\";\r\nimport { useStore } from \"../stores/store\";\r\nimport { useEffect } from \"react\";\r\nimport ModalContainer from \"../common/modal/ModalContainer\";\r\nimport ProfilePage from \"../../features/profiles/ProfilePage\";\r\nimport LoadingComponent from \"./LoadingComponent\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\n\r\nfunction App() {\r\n  const location = useLocation();\r\n  const {commonStore, userStore} = useStore();\r\n\r\n  useEffect(() => {\r\n    if(commonStore.token) {\r\n      userStore.getUser().finally(() => commonStore.setAppLoaded());\r\n    } else {\r\n      commonStore.setAppLoaded();\r\n    }\r\n  }, [commonStore, userStore])\r\n\r\n  if(!commonStore.appLoaded) return <LoadingComponent content='Loading app...' />\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer position=\"bottom-right\" hideProgressBar />\r\n      <ModalContainer />\r\n      <Route exact path=\"/\" component={HomePage} />\r\n      <Route\r\n        path={\"/(.+)\"}\r\n        render={() => (\r\n          <>\r\n            <NavBar />\r\n            <Container style={{ marginTop: \"7em\" }}>\r\n              <Switch>\r\n                <PrivateRoute exact path=\"/activities\" component={ActivityDashboard} />\r\n                <PrivateRoute path=\"/activities/:id\" component={ActivityDetails} />\r\n                <PrivateRoute\r\n                  key={location.key}\r\n                  path={[\"/createActivity\", \"/manage/:id\"]}\r\n                  component={ActivityForm}\r\n                />\r\n                <PrivateRoute path=\"/profiles/:username\" component={ProfilePage} />\r\n                <PrivateRoute path=\"/errors\" component={TestErrors} />\r\n                <Route path=\"/server-error\" component={ServerError} />\r\n                <Route component={NotFound} />\r\n              </Switch>\r\n            </Container>\r\n          </>\r\n        )}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default observer(App);\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}","import ReactDOM from 'react-dom';\r\nimport './app/layout/styles.css';\r\nimport 'react-calendar/dist/Calendar.css'\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\nimport App from './app/layout/App';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { store, StoreContext } from './app/stores/store';\r\nimport { createBrowserHistory } from 'history';\r\nimport React from 'react';\r\nimport { Router } from 'react-router-dom';\r\nimport ScrollToTop from './app/layout/ScrollToTop';\r\n\r\nexport const history = createBrowserHistory();\r\n\r\nReactDOM.render(\r\n  <StoreContext.Provider value={store}>\r\n    <Router history={history}>\r\n      <ScrollToTop />\r\n      <App />\r\n    </Router>\r\n  </StoreContext.Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}